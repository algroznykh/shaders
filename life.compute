#version 430

layout(local_size_x = 3,
       local_size_y = 3) in;       

layout(binding = 0) uniform writeonly image2D texture1;

uniform sampler2D prevFrame;
uniform int frame1;
uniform vec2 resolution;


vec4 read(ivec2 p) {
    return texelFetch(prevFrame, p, 0);
    }
    

vec4 populate(ivec2 p) {
    if (p.x > resolution.x - 2 || p.x < 1 || p.y > resolution.y - 2 || p.y < 1)
        return vec4(1, 0, 0, 1);
    else
        return vec4(0);
}


int life(ivec2 p) {

    int acc = 0;
    int state = int(round(read(p)).x);
    
    for (int x=-1; x <= 1; x++)
        for (int y = -1; y <= 1; y++)
            acc += int(round(read(p + ivec2(x, y))));
    
    if (state == 0 && acc == 3)
        return 1;        
    if (state == 1 && (acc > 2 && acc <= 4))
        return 1;
    else
        return 0;    
    }
    

void compute(ivec2 uv)
{    
    int state = life(uv);
    imageStore(texture1, uv, vec4(state, 0, 0, 1));
    
    if (frame1 ==0)
        imageStore(texture1, uv, populate(uv));
}

void main() {
 
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    
    if (mod(frame1, 4) == 0)
        compute(uv);
    else
        imageStore(texture1, uv, read(uv));    
}

