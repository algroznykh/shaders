float circle(vec2 p, float r) {
    return length(p) - pow(r, 2.);
}

mat2 rot(float q) {
    return mat2(cos(q), -sin(q), sin(q), cos(q));
}

void main(){
    vec2 uv = uv();
    float w ; vec3 color;
    
    // float k = mod(time ., 100.);
    float scale =.5;
    vec2 translate = vec2(1, .1);
    mat2 transform = mat2(scale, 0, 0,scale);
    // uv *= scale;
    uv += translate;
    uv *= transform;

    w = circle(uv, 1.);
    color =  vec3(1.) - vec3(atan(uv).x, atan((rot(2. * acos(-1.) / 3.) * uv).x), atan( (rot(2. *  acos(-1.) * 2. / 3. ) * uv).x));
    color *= -w;
    
    
    color = vec3(circle(uv, .2) < 0.? 1.: 0.) * red;
    float gridX = fract(uvN().x * 20. * 4.) < .9? 0.: 1.;
    float gridY = fract(uvN().y * 10. * 4.) < .9? 0.: 1.;
    color += gridX * gridY;
    gl_FragColor = vec4(color, 1.) ;
    
}
